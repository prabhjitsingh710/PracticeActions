name: third project
on: 
    pull_request:
        types:
            - opened
    push:
        branches:
            - main
            - master 
            # We can also mention:
            # 'dev-*' and 'feat/**' first one accepts: dev-new, dev-this-is-new
            # Second one: feat/new, feat/new/button
            # Foooooooooo
jobs:
    Test:
        runs-on: ubuntu-latest
        steps:
            - name: Using Checkout action
              uses: actions/checkout@v4
            - name: Setting up nodeJS ver
              uses: actions/setup-node@v4
              with:
                node-version: 18
            - name: Caching dependencies #Caching dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm 
#This is the path where dependencies are being downloaded in ubuntu
#It may vary OS to OS or need to need, what need to be cached
                key: storedfoo-${{hashFiles('**/package-lock.json')}} #this file contains all the dependencies
# to be downloaded. We used '**' doesn't matter where that package-lock.json file is
#It will find all files similar to it and cache/hash it.  
            - name: Installing Dependencies  
              run: npm ci 
#Now, this step will not be removed but instead it will fetch the dependencies
#From the above path we mentioned
            - name: Now Test in process
              run: npm test
            - name: Testing....
              run: echo "Test completed"
    Build:
        needs: Test
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{steps.first-job.outputs.script-file}} #Extracting output in this job
        steps:
            - name: Using Checkout action #so code can appear here
              uses: actions/checkout@v4
            - name: Setting up nodeJS ver #installing node JS
              uses: actions/setup-node@v4
              with:
                node-version: 18
            - name: Installing Dependencies  #Dependencies
              run: npm ci
            - name: Now build in process
              run: npm run build
            - name: Saving Artifacts #Saving artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Output files
                path: |
                  dist
                  package.json
            - name: Saving Job Outputs now artifacts #Saving Job Outputs
              id: first-job
              run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
            - name: Building....  
              run: echo "build completed"
    Deploy:
        needs: Build
        runs-on: ubuntu-latest
        steps:
            - name: downloading Artifacts #downloading artifacts
              uses: actions/download-artifact@v4
              with:
                name: Output files
            - name: listing files
              run: ls
            - name: Calling the output of build job
              run: echo "${{needs.build.outputs.script-file}}"
            - name: deploying....
              run: echo "deploying completed"
# Artifacts are different than Job Outputs